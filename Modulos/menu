#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mESPERE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mESPERE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "   \033[1;32m 𝐓𝐄𝐒𝐓 𝐃𝐄 𝐕𝐄𝐋𝐎𝐂𝐈𝐃𝐀𝐃 𝐃𝐄𝐋 𝐕𝐏𝐒         !\033[0m"
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (LATENCIA):\033[1;37m$png"
echo -e "\033[1;32mDOWNLOAD:\033[1;37m$down"
echo -e "\033[1;32mUPLOAD:\033[1;37m$upl"
echo -e "\033[1;32mLINK: \033[1;36m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O LIMITADOR... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m  LIMITADOR ACTIVO !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mDETENIENDO EL LIMITADOR... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31m LIMITADOR DETENIDO !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}
#onlineapp
function onapp1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO ONLINE APP... \033[0m"
   echo ""
   apt install apache2 -y > /dev/null 2>&1
   sed -i "s/Listen 80/Listen 8888/g" /etc/apache2/ports.conf >/dev/null 2>&1
   service apache2 restart
   rm -rf /var/www/html/server >/dev/null 2>&1
   mkdir /var/www/html/server >/dev/null 2>&1
   fun_bar 'screen -dmS onlineapp onlineapp' 'sleep 3'
   [[ $(grep -wc "onlineapp" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   } || {
       sed -i '/onlineapp/d' /etc/autostart
	   echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   }
   IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
   echo -e "\n\033[1;32m  ONLINE APP ACTIVO !\033[0m"
   echo -e "\033[1;31m \033[1;33mURL de Usuários Online para usar en App\033[0m"
   echo -e " http://$IP:8888/server/online"
   sleep 10
   menu
}
function onapp2 () {
   clear
   echo -e "\033[1;32mDETENIENDO ONLINE APP... \033[0m"
   echo ""
   fun_stponlineapp () {
      sleep 1
      screen -r -S "onlineapp" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "onlineapp" /etc/autostart) != '0' ]] && {
          sed -i '/onlineapp/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stponlineapp' 'sleep 3'
   rm -rf /var/www/html/server >/dev/null 2>&1
   echo -e "\n\033[1;31m ONLINE APP DETENIDO !\033[0m"
   sleep 3
   menu
}
function onapp_ssh () {
[[ $(ps x | grep "onlineapp"|grep -v grep |wc -l) = '0' ]] && onapp1 || onapp2
}
##
function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDESACTIVANDO AUTO EJECUCION\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO EJECUCION DESACTIVADO!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;32mACTIVANDO AUTO EJECUCION\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO EJECUCION ACTIVADO!\033[0m"
      sleep 1.5s
      menu2
   fi

}
#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m(ON◉) ") || stsf=$(echo -e "\033[1;31m(OFF) ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
stsbotrev=$(ps x | grep "bot_rev"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $3'})")
clear
echo -e "\033[1;31m╔════════════════════════════════════════════════════════════╗\033[0m"
echo -e "\033[1;31m║ \E[5;34;47m                 𝐒𝐇𝐀𝐃𝐎𝐖 𝐏𝐑𝐎𝐉𝐄𝐂𝐓𝐒 𝐏𝐑𝐎                      \E[0m \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╦═══════════════════╦═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mSISTEMA           \033[1;31m║  \033[1;32mMEMÓRIA RAM      \033[1;31m║ \033[1;32m PROCESADOR       \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mOS: \033[1;37m$_system    \033[1;31m║  \033[1;36mTotal:\033[1;37m$_ram \033[1;31m║  \033[1;36mNucleos: \033[1;37m$_core\033[0m   \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mHora: \033[1;37m$_hora    \033[1;31m║  \033[1;36mEn uso: \033[1;37m$_usor \033[1;31m║  \033[1;36mEn uso: \033[1;37m$_usop\033[0m    \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╬═══════════════════╬═══════════════════╣\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;31m║  \033[1;32mOnlines:\033[1;37m $_onlin    \033[1;31m║  \033[1;32mExpirados: \033[1;37m$_userexp \033[1;31m║  \033[1;32mTotal: \033[1;37m$_tuser\033[0m     \033[1;31m║"
    var01='\033[1;37m•'
} || {
    echo -e "\033[1;31m║         \033[1;33m[\033[1;31m!\033[1;33m]  \033[1;32mEXISTE ACTUALIZACION DISPONIBLE  \033[1;33m[\033[1;31m!\033[1;33m]\033[0m        \033[1;31m║"
    var01="\033[1;32m!"
}
echo -e "\033[1;31m╠════════════════════╩═══════════════════╩═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mMEMÓRIA SWAP    \033[1;36mTotal: \033[1;37m$swap1  \033[1;36mEn uso: \033[1;37m$swap3  \033[1;36mLibre: \033[1;37m$swap2 \033[1;31m║"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╝\033[0m"
echo -e "\033[1;31m║   [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mAGREGAR HOST \033[1;31m            [\033[1;36m28\033[1;31m] \033[1;37m• \033[1;33mCAMB CLAVE ROOT \033[1;31m  \033[1;31m  
\033[1;31m║   [\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mREMOVER HOST \033[1;31m            [\033[1;36m29\033[1;31m] \033[1;37m• \033[1;33mAUTO EJECUCION $autm \033[1;31m
\033[1;31m║   [\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mREINICIAR SISTEMA \033[1;31m       [\033[1;36m30\033[1;31m] $var01 \033[1;33mACTUALIZAR SCRIPT \033[1;31m  \033[1;31m  
\033[1;31m║   [\033[1;36m24\033[1;31m] \033[1;37m• \033[1;33mREINICIAR SERVICIOS \033[1;31m     [\033[1;36m31\033[1;31m] \033[1;37m• \033[1;33mREMOVER SCRIPT \033[1;31m  \033[1;31m    
\033[1;31m║   [\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mBLOCK TORRENT $stsf\033[1;31m     [\033[1;36m32\033[1;31m] \033[1;37m• \033[1;33mTCPTWEAKER       \033[1;31m    \033[1;31m
\033[1;31m║   [\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mBOT TELEGRAM $stsbot\033[1;31m      [\033[1;36m33\033[1;31m] \033[1;37m• \033[1;33mVOLVER \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m  \033[1;31m        
\033[1;31m║   [\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mBOT PRUEVA $stsbotteste\033[1;31m        [\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mSALIR \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m  \033[1;31m
\033[1;31m║   [\033[1;36m M \033[1;31m] \033[1;37m• \033[1;33mAUTO REBOOT (00:00H) \033[1;31m"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╝\033[0m"
echo -ne "\033[1;31m╚╣\033[1;32m SELECCIONE UNA OPCION \033[1;33m:"; read x
case "$x" in
   21)
   clear
   addhost
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   22)
   clear
   delhost
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   23)
   clear
   reiniciarsistema
   ;;
   24)
   clear
   reiniciarservicos
   sleep 3
   ;;
   25)
   blockt
   ;;
   26)
   botssh
   ;;
   27)
   inst-botteste
   ;;
   28)
   clear
   senharoot
   sleep 3
   ;;
   29)
   autoexec
   ;;
   30)
   attscript
   ;;
   31)
   clear
   delscript
   ;;
   32)
   clear
   tcptweaker.sh
   ;;
   33)
   menu
   ;;
   m)
   clear
   echo -e "\E[44;1;37m             AUTO REBOOT              \E[0m"
                                echo -e "\033[1;31mESTA FUNCION ACTIVA LA INICIALIZACIÓN AUTOMÁTICA DE TU VPS \033[1;33m \033[1;32\033[0m"
   echo -e "\033[1;31M ESCOGE UN HORARIO PARA EL REINICIO EJ: \033[1;33m00:00 \033[1;32\033[0m"
echo -ne "\033[1;32mDIGITE LA HORA \033[1;33m\033[1;37m: "
            read escolha
                echo ""
                echo -e "\033[1;31m HORARIO VALIDO!"
                sleep 4
                clear
   shutdown -r +$escolha
   echo -e ""
   echo -e "\033[1;33mAUTO REBOOT $escolha ACTIVADO CON EXITO \033[0m"
   echo -e ""
   echo -e "\033[1;34m[\033[1;37m01 •\033[1;34m]\033[1;37m > \033[1;33mDESACTIVAR REBOOT \033[1;37m\033[0;32m"
   echo -e ""
   echo -ne "\n\033[1;33mENTER \033[1;33mPARA VOLVER AL\033[1;33mMENU!\033[0m"; read
   ;;
   1)
   clear
   echo -e "\E[44;1;37m             AUTO REBOOT              \E[0m"
   echo -e "\033[1;31mESTA FUNCION DESACTIVA EL REINICIO AUTOMÁTICO DE TU VPS \033[1;33m \033[1;32\033[0m"
   echo -e "\033[1;31mEL HORÁRIO PRÉ-DEFINIDO $escolha SERÁ DESACTIVADO \033[1;33m \033[1;32\033[0m"
   shutdown -c
echo -e "\033[1;33mAUTO REBOOT DESACTIVADO CON EXITO \033[0m"
echo -e ""
   echo -ne "\n\033[1;33mENTER \033[1;33mPARA VOLVER AL \033[1;33mMENU!\033[0m"; read
   ;;
   0|00)
   echo -e "\033[1;31mSaliendo...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcion invalida !\033[0m"
   sleep 2
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON◉) " || echo -e "\033[1;31m(OFF) ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m(ON ◉ ") || stsf=$(echo -e "\033[1;31m(OFF ○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON ◉ " || echo -e "\033[1;31m(OFF ○ ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON ◉ " || echo -e "\033[1;31m(OFF ○ ")
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m (ON ◉)" || echo -e "\033[1;31m(OFF ○)")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m (ON ◉)" || echo -e "\033[1;31m(OFF ○)")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON ◉) " || echo -e "\033[1;31m(OFF ○) ")
stsom=$(ps x | grep "shutdown -r 16:00"|grep -v grep > /dev/null && echo -e "\033[1;32m(ON ◉) " || echo -e "\033[1;31m(OFF ○) ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m(ON ◉) " || echo -e "\033[1;31m(OFF ○)")
clear
echo -e "\033[1;31m╔════════════════════════════════════════════════════════════╗\033[0m"
echo -e "\033[1;31m║ \E[5;34;47m            👽👽👽 𝐒𝐇𝐀𝐃𝐎𝐖 𝐏𝐑𝐎𝐉𝐄𝐂𝐓𝐒 𝐏𝐑𝐎 👽👽👽                   \E[0m \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╦═══════════════════╦═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mSISTEMA           \033[1;31m║  \033[1;32mMEMÓRIA RAM      \033[1;31m║ \033[1;32m PROCESSADOR      \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mOS: \033[1;37m$_system    \033[1;31m║  \033[1;36mTotal:\033[1;37m$_ram \033[1;31m║  \033[1;36mNucleos: \033[1;37m$_core\033[0m   \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mHora: \033[1;37m$_hora    \033[1;31m║  \033[1;36mEn uso: \033[1;37m$_usor \033[1;31m║  \033[1;36mEn uso: \033[1;37m$_usop\033[0m    \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╬═══════════════════╬═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mOnlines:\033[1;37m $_onlin    \033[1;31m║  \033[1;32mExpirados: \033[1;37m$_userexp \033[1;31m║  \033[1;32mTotal: \033[1;37m$_tuser     \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╩═══════════════════╩═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mBAD-UDP/VPN \033[1;37m $stsu \033[1;37m              \033[1;37m\033[1;36mLIMITADOR SSH \033[1;37m $stsl \033[1;31m║"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╝\033[0m"
echo -e "\033[1;31m║   \033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mCREAR USUARIO \033[1;31m       [\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mSPEEDTEST  \033[1;31m
\033[1;31m║   [\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mCREAR PRUEVA     \033[1;31m    [\033[1;36m13\033[1;31m] \033[1;37m• \033[1;33mBANNER  \033[1;31m          
\033[1;31m║   [\033[1;36m03\033[1;31m] \033[1;37m\033[1;37m• \033[1;33mREMOVER USUARIO \033[1;31m     [\033[1;36m14\033[1;31m] \033[1;37m• \033[1;33mTRAFICO  \033[1;31m
\033[1;31m║   [\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mMONITOR EN LINEA \033[1;31m    [\033[1;36m15\033[1;31m] \033[1;37m• \033[1;33mOPTIMIZAR  \033[1;31m       
\033[1;31m║   [\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mRENOVAR DATOS \033[1;31m       [\033[1;36m16\033[1;31m] \033[1;37m• \033[1;33mBACKUP  \033[1;31m         
\033[1;31m║   [\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mALTERAR LIMITE \033[1;31m      [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;33mHERRAMIENTAS     \033[1;31m 
\033[1;31m║   [\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mCAMBIAR CONTRA \033[1;31m      [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;33mLIMITADOR $stsl \033[1;31m  
\033[1;31m║   [\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mREMOVER EXPIRADOS \033[1;31m   [\033[1;36m19\033[1;31m] \033[1;37m• \033[1;33mMenu BadVpn $stsu\033[1;31m
\033[1;31m║   [\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mLISTA DE USUARIOS \033[1;31m   [\033[1;36m20\033[1;31m] \033[1;37m• \033[1;33mFIREWALL (PRO)  \033[1;31m 
\033[1;31m║   [\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mABRIR PUERTOS \033[1;31m       [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mINFO VPS \033[1;31m>\033[1;33m>\033[1;32m>\033[0m \033[1;31m    
\033[1;31m║   [\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mCREAR MEMORIA SWAP \033[1;31m  [\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mCHECKUSER 4G  \033[1;31m   
\033[1;31m║   [\033[1;36m A \033[1;31m] \033[1;37m• \033[1;33mCHECKUSER GLTUNNEL \033[1;31m [\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mMAS \033[1;31m>\033[1;33m>\033[1;32m>\033[0m \033[1;31m
\033[1;31m║   [\033[1;36m B \033[1;31m] \033[1;37m• \033[1;33mONLINE APP $stson\033[1;31m
\033[1;31m║   [\033[1;36m C \033[1;31m] \033[1;37m• \033[1;33mDNS NETFLIX \033[1;31m
\033[1;31m║   [\033[1;36m D \033[1;31m] \033[1;37m• \033[1;33mPANEL BASHTOP \033[1;31m
\033[1;31m║   [\033[1;36m E \033[1;31m] \033[1;37m• \033[1;33mACTIVAR UDP-SOCKSIP \033[1;31m
\033[1;31m║   [\033[1;36m F \033[1;31m] \033[1;37m• \033[1;33mMENU UDP-CUSTOM \033[1;31m
\033[1;31m║   [\033[1;36m G \033[1;31m] \033[1;37m• \033[1;33mINSTALAR WEBSOCKET PRO\033[1;31m"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╝\033[0m"
echo -ne "\033[1;31m╚╣\033[1;32m SELECCIONE UNA OPCION \033[1;33m:"; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   swapmemory
   ;;
   12)
   clear
   velocity
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   13)
   clear
   banner
   sleep 3
   ;;
   14)
   clear
   echo -e "\033[1;32mPARA SALIR CLICK CTRL + C\033[1;36m"
   sleep 4
   nload
   ;;
   15)
   clear
   otimizar
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   16)
   userbackup
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   17)
   clear
   utili
   ;;
   18)
   limit_ssh
   ;;
   19)
   clear
   menub
   exit;
   ;;
   20)
   fr
   ;;
   21)
   clear
   detalhes
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   22)
   initcheck
   ;;
   23)
   menu2
   ;;
   a)
   gltunnel
   ;;
   b)
   onapp_ssh
   ;;
   c) 
   dns-netflix.sh
   ;;
   d)
   cd bashtop/
   bashtop
   ;;
   e)
   clear
   sudo wget https://raw.githubusercontent.com/thefather12/SocksIP-udpServer/main/UDPserver.sh; chmod +x UDPserver.sh; ./UDPserver.sh
   udp
   ;;
   f)
   clear
   menub2
   exit;
   ;;
   g)
   clear
   sudo wget 'https://www.dropbox.com/scl/fi/bbsrna4qkc0xh5p3ft5nt/install-ws.bin?rlkey=ibebstzlal5v6597azo2tutzp&dl' -O 'install-ws' && chmod +x install-ws && ./install-ws
   ;;
   *)
   echo -e "\n\033[1;31mOpcion invalida !\033[0m"
   sleep 2
esac
done
}
menu
#fim
