#!/bin/bash
clear
unset Key
#lolcat
[[ $(dpkg --get-selections|grep -w "lolcat"|head -1) ]] || apt-get install lolcat -y &>/dev/null
[[ $(dpkg --get-selections|grep -w "lolcat"|head -1) ]] || ESTATUS=`echo -e "\033[91mFALLO DE INSTALACION"` &>/dev/null
[[ $(dpkg --get-selections|grep -w "lolcat"|head -1) ]] && ESTATUS=`echo -e "\033[92mINSTALADO"` &>/dev/null
echo -e "\033[97m  # apt-get install lolcat............... $ESTATUS "
#boxes
[[ $(dpkg --get-selections|grep -w "boxes"|head -1) ]] || apt-get install boxes -y &>/dev/null
[[ $(dpkg --get-selections|grep -w "boxes"|head -1) ]] || ESTATUS=`echo -e "\033[91mFALLO DE INSTALACION"` &>/dev/null
[[ $(dpkg --get-selections|grep -w "boxes"|head -1) ]] && ESTATUS=`echo -e "\033[92mINSTALADO"` &>/dev/null
echo -e "\033[97m  # apt-get install lolcat............... $ESTATUS "
tput cuu1 && tput dl1
tput cuu1 && tput dl1
#figlet
[[ $(dpkg --get-selections|grep -w "figlet"|head -1) ]] || apt-get install figlet -y &>/dev/null
[[ $(dpkg --get-selections|grep -w "figlet"|head -1) ]] || ESTATUS=`echo -e "\033[91mFALLO DE INSTALACION"` &>/dev/null
[[ $(dpkg --get-selections|grep -w "figlet"|head -1) ]] && ESTATUS=`echo -e "\033[92mINSTALADO"` &>/dev/null
echo -e "\033[97m  # apt-get install figlet............... $ESTATUS "
#curl
[[ $(dpkg --get-selections|grep -w "curl"|head -1) ]] || apt-get install figlet -y &>/dev/null
[[ $(dpkg --get-selections|grep -w "curl"|head -1) ]] || ESTATUS=`echo -e "\033[91mFALLO DE INSTALACION"` &>/dev/null
[[ $(dpkg --get-selections|grep -w "curl"|head -1) ]] && ESTATUS=`echo -e "\033[92mINSTALADO"` &>/dev/null
echo -e "\033[97m  # apt-get install curl............... $ESTATUS "
tput cuu1 && tput dl1
tput cuu1 && tput dl1
#pv
[[ $(dpkg --get-selections|grep -w "pv"|head -1) ]] || apt-get install pv -y &>/dev/null
[[ $(dpkg --get-selections|grep -w "pv"|head -1) ]] || ESTATUS=`echo -e "\033[91mFALLO DE INSTALACION"` &>/dev/null
[[ $(dpkg --get-selections|grep -w "pv"|head -1) ]] && ESTATUS=`echo -e "\033[92mINSTALADO"` &>/dev/null
echo -e "\033[97m  # apt-get install pv .................. $ESTATUS "
tput cuu1 && tput dl1
[[ $(dpkg --get-selections|grep -w "git"|head -1) ]] || apt-get install git -y &>/dev/null 
echo -e "America/Sao_Paulo" >/etc/timezone
ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime >/dev/null 2>&1
dpkg-reconfigure --frontend noninteractive tzdata >/dev/null 2>&1
cd $HOME
myIP=$(wget -qO- ifconfig.me)
_lvk=$(wget -qO- https://raw.githubusercontent.com/thefather12/SSHPLUS2/main/Modulos/versao)
IP=$(wget -qO- ipv4.icanhazip.com)
IP2=$(wget -qO- http://whatismyip.akamai.com/)
[[ "$IP" != "$IP2" ]] && ipdovps="$IP2" || ipdovps="$IP"
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mEs necesario ejecutar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0
}
#_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
#_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
#_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')
_lnk='revenda.sshplus.xyz'
_Ink='/usr/local/lib'
_1nk='/usr/lib'
SCPinstal="$HOME/install"
_dir1='/bin'
_dir2='/etc/SSHPlus'

cd $HOME
msg () {
BRAN='\033[1;37m' && VERMELHO='\e[31m' && VERDE='\e[32m' && AMARELO='\e[33m'
AZUL='\e[34m' && MAGENTA='\e[35m' && MAG='\033[1;36m' &&NEGRITO='\e[1m' && SEMCOR='\e[0m'
 case $1 in
  -ne)cor="${VERMELHO}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}";;
  -ama)cor="${AMARELO}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -verm)cor="${AMARELO}${NEGRITO}[!] ${VERMELHO}" && echo -e "${cor}${2}${SEMCOR}";;
  -azu)cor="${MAG}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -verd)cor="${VERDE}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
  -bra)cor="${BRAN}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}";;
  -bar2)cor="${AZUL}${NEGRITO}======================================================" && echo -e "${cor}${SEMCOR}";;
  -bar)cor="${AZUL}${NEGRITO}========================================" && echo -e "${cor}${SEMCOR}";;
 esac
}


error_fun () {
msg -bar2 && msg -verm  "Esta Clave ya fue usada o no existe!! " && msg -bar2
[[ -d ${SCPinstal} ]] && rm -rf ${SCPinstal}
exit 1
}

invalid_key () {
msg -bar2 && msg -verm "Key Failed! " && msg -bar2
[[ -e $HOME/lista-arq ]] && rm $HOME/lista-arq
exit 1
}

_terminate(){
    echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
    rm versao* >/dev/null 2>&1
    wget https://raw.githubusercontent.com/upalfadate/hdisbsi/main/Install/versao >/dev/null 2>&1
    rm v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/upalfadate/hdisbsi/main/Modulos/v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/upalfadate/hdisbsi/main/Modulos/botteste.sh >/dev/null 2>&1
    chmod 777 v2raymanager >/dev/null 2>&1
    chmod 777 botteste.sh >/dev/null 2>&1
    [[ -d $HOME/BOT ]] || mkdir $HOME/BOT 
    [[ -d $HOME/BOT ]] && wget -q -O $HOME/BOT/ShellBot.sh https://raw.githubusercontent.com/upalfadate/hdisbsi/main/Modulos/ShellBot.sh
    chmod 777 $HOME/BOT/ShellBot.sh
    [[ -d /etc/rec ]] || mkdir /etc/rec
    wget -q -O /etc/rec/licence https://raw.githubusercontent.com/upalfadate/hdisbsi/main/Modulos/licence
    chmod 777 /etc/rec/licence
    cd $HOME
}

_rutas(){
_lvk=$(wget -qO- https://raw.githubusercontent.com/thefather12/SSHPLUS2/main/Modulos/versao)
IP=$(wget -qO- ipv4.icanhazip.com)
IP2=$(wget -qO- http://whatismyip.akamai.com/)
[[ "$IP" != "$IP2" ]] && ipdovps="$IP2" || ipdovps="$IP"
echo -e "$ipdovps" >/etc/IP
[[ ! -d /etc/SSHPlus ]] && mkdir /etc/SSHPlus
[[ ! -d /etc/SSHPlus/v2ray ]] && mkdir /etc/SSHPlus/v2ray
[[ ! -d /etc/SSHPlus/senha ]] && mkdir /etc/SSHPlus/senha
[[ ! -e /etc/SSHPlus/Exp ]] && touch /etc/SSHPlus/Exp
[[ ! -d /etc/SSHPlus/userteste ]] && mkdir /etc/SSHPlus/userteste
[[ ! -d /etc/SSHPlus/.tmp ]] && mkdir /etc/SSHPlus/.tmp
[[ ! -d /etc/bot ]] && mkdir /etc/bot
[[ ! -d /etc/bot/info-users ]] && mkdir /etc/bot/info-users
[[ ! -d /etc/bot/arquivos ]] && mkdir /etc/bot/arquivos
[[ ! -d /etc/bot/revenda ]] && mkdir /etc/bot/revenda
[[ ! -d /etc/bot/suspensos ]] && mkdir /etc/bot/suspensos
[[ ! -d /etc/rec ]] && mkdir /etc/rec
[[ ! -e /etc/bot/lista_ativos ]] && touch /etc/bot/lista_ativos
[[ ! -e /etc/bot/lista_suspensos ]] && touch /etc/bot/lista_suspensos
echo -e 'by: @KIRITO_SSH' >/usr/lib/sshplus && cat /usr/lib/sshplus >${_1nk}/licence && cat /usr/lib/sshplus > /etc/SSHPlus/.tmp/crazy
netstat -nplt | grep -w 'apache2' | grep -w '80' && sed -i "s/Listen 80/Listen 81/g" /etc/apache2/ports.conf && service apache2 restart
[[ "$(grep -o '#Port 22' /etc/ssh/sshd_config)" == "#Port 22" ]] && sed -i "s;#Port 22;Port 22;" /etc/ssh/sshd_config && service ssh restart
grep -v "^PasswordAuthentication" /etc/ssh/sshd_config >/tmp/passlogin && mv /tmp/passlogin /etc/ssh/sshd_config
echo "PasswordAuthentication yes" >>/etc/ssh/sshd_config
_arq_host="/etc/hosts"
_host[0]="d1n212ccp6ldpw.cloudfront.net"
_host[1]="dns.whatsapp.net"
_host[2]="portalrecarga.vivo.com.br/recarga"
_host[3]="navegue.vivo.com.br/controle/"
_host[4]="navegue.vivo.com.br/pre/"
_host[5]="www.whatsapp.net"
_host[6]="/SSHPLUS?"
for host in ${_host[@]}; do
    if [[ "$(grep -w "$host" $_arq_host | wc -l)" = "0" ]]; then
        sed -i "3i\127.0.0.1 $host" $_arq_host
    fi
done
[[ ! -e /etc/autostart ]] && {
    echo '#!/bin/bash
clear
#INICIO AUTOMATICO' >/etc/autostart
    chmod +x /etc/autostart
} || {
    [[ $(ps x | grep "bot_plus" | grep -v grep | wc -l) != '0' ]] && wget -qO- https://raw.githubusercontent.com/thefather12/SSHPLUS2/main/Modulos/ShellBot.sh
    for proc in $(ps x | grep 'dmS' | grep -v 'grep' | awk {'print $1'}); do
        screen -r -S "$proc" -X quit    
done
    screen -wipe >/dev/null
    echo '#!/bin/bash
clear
#INICIO AUTOMATICO' >/etc/autostart
    chmod +x /etc/autostart
}
crontab -r >/dev/null 2>&1
(
    crontab -l 2>/dev/null
    echo "@daily /bin/verifatt"
    echo "@reboot /etc/autostart"
    echo "* * * * * /etc/autostart"
    echo "0 */6 * * * /bin/uexpired"
) | crontab -
echo "$_lvk" | sed -n '1 p' | cut -d' ' -f2 >/bin/versao && cat /bin/versao >/home/sshplus
wget https://github.com/thefather12/SSHPLUS2/raw/main/Install/jq-linux64 >/dev/null 2>&1
chmod +x jq-linux64 && mv jq-linux64 $(which jq)
service cron restart >/dev/null 2>&1
service ssh restart >/dev/null 2>&1
[[ -d /var/www/html/openvpn ]] && service apache2 restart >/dev/null 2>&1

}

install_fim () {
[[ $1 = '--up' ]] && _terminate
    sleep 1s
    echo ""
    [[ -f "$HOME/usuarios.db" ]] && {
        clear
        figlet "THEFATHER12" | lolcat
        echo "SCRIPT EN DESARROLLO !!" 
        echo -e "\033[01;31m━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═━═━═━━═━═━═━═━═━═━═━━\033[0m"
        echo -e "\033[1;33mDETECTAMOS..."
        echo -e "\033[01;31m━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═━═━═━━═━═━═━═━═━═━═━━\033[0m"
        echo -e "\033[1;33mDATOS DE USUÁRIOS ENCONTRADO!"
        echo ""
        echo -e "\033[1;33m🗣️ USUARIOS"
        echo -e "\033[1;33m🔑 CONTRASEÑAS"
        echo -e "\033[1;33m📲 LIMITE"
        echo -e "\033[1;33m⌛ DIAS"
        echo -e ""
        echo -e "\033[1;33mLOCALIZANDO ARCHIVO \033[1;32m(usuarios.db)"
        echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mMANTER DATOS ACTUALES\033[0m"
        echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1;33mCREAR UNA NUEVA BASE DE DATOS\033[0m"
        echo -e "\033[01;31m━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═━═━═━━═━═━═━═━═━═━═━━\033[0m"
        echo ""
        tput setaf 2
        tput bold
        read -p "Opcion ?: " -e -i 1 optiondb
        tput sgr0
    } || {
        awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    }
    [[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    clear
    tput setaf 7
    tput setab 4
    tput bold
    printf '%35s%s%-18s\n' " ESPERE A QUE SE INSTALE EL SCRIPT"
    tput sgr0
    echo ""
    echo ""
    echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mACTUALIZANDO SISTEMA \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
    echo ""
    echo -e "    \033[1;33mACTUALIZACIONES DEMORAN UNOS INSTANTES SEA PACIENTE 🕛🕧!  \033[0m"
    echo ""
    fun_attlist() {
        apt-get update -y
        [[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
        echo "crz: $(date)" >/usr/share/.plus/.plus
    }
    fun_bar 'fun_attlist'
    clear
    echo ""
    echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mINSTALANDO PAQUETES \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
    echo ""
    echo -e "\033[1;33mALGUNOS PAQUETES SON EXTREMAMENTE  NECESSÁRIOS !\033[0m"
    echo ""
    inst_pct() {
        _pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip" "python" "at")
        for _prog in ${_pacotes[@]}; do
            apt install $_prog -y
        done
        pip install speedtest-cli
    }
    fun_bar 'inst_pct'
    [[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp
    ufw allow 80/tcp
    ufw allow 3128/tcp
    ufw allow 8799/tcp
    ufw allow 8080/tcp
    clear
    echo ""
    echo -e "              \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
    echo ""
    echo -e "      \033[1;33mOPTIMIZANDO PYTHON \033[0m"
    echo ""
    fun_bar 'otimize_python'
    clear
    echo ""
    echo -e "              \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
    echo ""
    echo -e "      \033[1;33mINSTALANDO FUNCIONES Y DEFINICIONES! \033[0m"
    echo ""
    [[ $1 = '--up' ]] && _rutas
    clear
    echo ""
    cd $HOME
    echo -e "        \033[1;33m • \033[1;32mINSTALACION TERMINADA 😃 \033[1;33m • \033[0m"
    echo ""
    cd $HOME
    echo "clear" >>/root/.bashrc
    echo 'DATE=$(date +"%d-%m-%y")' >>/root/.bashrc
    echo 'TIME=$(date +"%T")' >>/root/.bashrc
    echo 'figlet -k THEFATHER12 | lolcat' >>/root/.bashrc
    echo 'echo -e " NOMBRE DEL SERVIDOR : $HOSTNAME"' >>/root/.bashrc
    echo 'echo -e " SERVIDOR CONECTADO EN : $(uptime -p)"' >>/root/.bashrc
    echo 'echo -e " FECHA : $DATE"' >>/root/.bashrc
    echo 'echo -e " HORA : $TIME"' >>/root/.bashrc
    echo 'echo -e "@THE FATHER12"' >>.bashrc
    echo 'echo -e "\033[1;31m DIGITE ( h o menu ) PARA ENTRAR\033[0m."' >>/root/.bashrc
    echo 'echo -e ""' >>/root/.bashrc
    date=$(date '+%Y-%m-%d <> %H:%M:%S')
    echo -e "\033[1;37m $system                          $date"
    figlet "THEFATHER12" | lolcat
    echo -e "\033[01;31m║\033[1;31m\033[5;34;47m                INSTALACION TERMINADA               \033[1;33m \033[0m\033[01;31m║"
    echo -e "\033[01;31m║\033[1;33mPARA INICIAR DIGITE: \033[1;32m h o menu\033[0m"
    echo -e "\033[01;31m║\033[1;33m MAS INFORMACION \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@THEFATHER12\033[0m"
    rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
}

fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "\033[1;31m❪\033[1;33mESPERE \033[1;37m> \033[1;32m|"
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;32m█"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;32m|"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;31m❪\033[1;33mESPERE \033[1;37m> \033[1;32m|"
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

verificar_arq () {
[[ ! -d ${_dir1} ]] && mkdir ${_dir1}
[[ ! -d ${_dir2} ]] && mkdir ${_dir2}
rm $_dir2/ShellBot.sh $_dir2/cabecalho $_dir2/open.py $_dir2/proxy.py $_dir2/wsproxy.py >/dev/null 2>&1
case $1 in
"cabecalho"|"ShellBot.sh"|"open.py"|"proxy.py"|"wsproxy.py")ARQ="${_dir2}";; #MOVE A DIR 2
*)ARQ="${_dir1}";; #ALL FILES DIR1
esac
mv -f ${SCPinstal}/$1 ${ARQ}/$1
#echo -e "mv -f ${SCPinstal}/$1 ${ARQ}/$1"
chmod +x ${ARQ}/$1
}

ofus () {
unset server
server=$(echo ${txt_ofuscatw}|cut -d':' -f1)
unset txtofus
number=$(expr length $1)
for((i=1; i<$number+1; i++)); do
txt[$i]=$(echo "$1" | cut -b $i)
case ${txt[$i]} in
".")txt[$i]="R";;
"R")txt[$i]=".";;
"9")txt[$i]="@";;
"@")txt[$i]="9";;
"5")txt[$i]="?";;
"?")txt[$i]="5";;
"0")txt[$i]="%";;
"%")txt[$i]="0";;
"4")txt[$i]="I";;
"I")txt[$i]="4";;
"/")txt[$i]="Y";;
"Y")txt[$i]="/";;
"-")txt[$i]="T";;
"T")txt[$i]="-";;
"L")txt[$i]="1";;
"1")txt[$i]="L";;
esac
txtofus+="${txt[$i]}"
done
echo "$txtofus" | rev
}


invalid_key () {
msg -bar2 && msg -verm "Key Failed! " && msg -bar2
[[ -e $HOME/lista-arq ]] && rm $HOME/lista-arq
exit 1
}



function verif_key() {
Key=$1
krm=$(echo '5:q-3gs2.o7%8:1' | rev) 
IiP=$(ofus "$Key" | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
echo -e " VAMOS A DESENCADENAR LA KEY FILE " | pv -qL 10
#sleep 5s
tput cuu1 && tput dl1
echo -ne " FILES TIME OUT SLEEPING " | pv -qL 10
updatedb
#sleep 5s
#echo -e " DONE"
tput cuu1 && tput dl1
if [[ -e $HOME/lista-arq ]] && [[ ! $(cat $HOME/lista-arq|grep "KEY INVALIDA!") ]]; then
   msg -bar2
   msg -ama  "BIENVENIDO, GRACIAS POR UTILIZAR : \033[1;31m[ SSH-Plus ]"
   REQUEST=$(ofus "$Key"|cut -d'/' -f2)
   [[ ! -d ${SCPinstal} ]] && mkdir ${SCPinstal}
   pontos="."
   stopping=" Verificando FILES BASE "
   for arqx in $(cat $HOME/lista-arq); do
   wget --no-check-certificate -O ${SCPinstal}/${arqx} ${IiP}:85/${REQUEST}/${arqx} > /dev/null 2>&1 && verificar_arq "${arqx}" #|| error_fun
   done
   msg -bar2
   echo "$Key" > ${SCPdir}/key.txt
   [[ -d ${SCPinstal} ]] && rm -rf ${SCPinstal}   
   install_fim '--up'
   rm -f $HOME/lista-arq
else
invalid_key
fi
}

otimize_python() {
    # INSTALANDO PYTHON Y PYTHON2
    apt-get install python -y >/dev/null 2>&1
    apt-get install python2 -y >/dev/null 2>&1
    # INSTALANDO PYTHON3.6 Y PYTHON3.9
    apt-get install python3.6 -y >/dev/null 2>&1
    apt-get install python3.7 -y >/dev/null 2>&1
    apt-get install python3.8 -y >/dev/null 2>&1
    apt-get install python3.9 -y >/dev/null 2>&1
    # CREANDO ALTERNATIVAS PYTHON
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
    # INSTALANDO PIP
    apt install pip -y
    apt install python3-pip -y
    # INSTALANDO SOCAT
    apt install socat -y
    #RESETEAR PYTHON3
    update-alternatives --set python3 /usr/bin/python3.6
}
figlet 'THEFATHER12' | boxes -d stone -p a0v0 | lolcat
echo "SOLO DIOS ME DA LA SABIDURIA PARA LOGRAR MIS METAS."| lolcat
echo -e "\033[01;31m▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣\033[0m"| lolcat
echo ""
echo ""
echo -e "                       \033[05;31mSISTEMAS \033[05;33mCOMPATIBLES\033[0m"| lolcat
echo ""
echo -e "\033[1;31m• \033[1;33mUBUNTU 18 x64\033[0m 🐧 "| lolcat
echo -e "\033[1;31m• \033[1;33mUBUNTU 20 x64\033[0m 🐧 "| lolcat
echo -e "\033[1;31m• \033[1;33mDEBIAN  9 x64\033[0m 🐧 "| lolcat
echo -e "\033[1;31m• \033[1;33mDEBIAN 10 x64\033[0m 🐧 "| lolcat
echo -e "\033[1;31m• \033[1;33mDEBIAN 11 x64\033[0m 🐧 "| lolcat
echo -e "\033[1;31m \033[1;33m\033[0m"
echo -e "\033[1;31m• \033[1;33mUSE UBUNTU 18 x64 PARA UNA MEJOR EXPERIENCIA\033[0m"| lolcat
echo -e "\033[1;31m• \033[1;33mUSE UBUNTU 18 x64 PARA (V2RAY) EVITE OTROS SISTEMAS\033[0m"| lolcat
echo -e "\033[1;31m \033[1;33m\033[0m"| lolcat
echo ""

#echo -e "\n\033[1;36mVERIFICANDO LINK... \033[0m" ; rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/thefather12/SSHPLUS2/main/Install/list >/dev/null 2>&1
while [[ ! $Key ]]; do
echo -e "\033[1;31m▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣\033[0m"| lolcat
echo ""
echo -e " FAVOR INGRESA TU KEY EN EL ESPACIO DE ABAJO"
msg -bar
echo -ne " LLAVE DE ACCESO : " && read Key
Key="$(echo "$Key" | tr -d '[[:space:]]')"
tput cuu1 && tput dl1
done
echo -ne "Key: "
echo -e " \e[3;32m VERIFICANDO KEY\e[0m" | pv -qL 10
tput cuu1 && tput dl1
cd $HOME
wget --no-check-certificate -O $HOME/lista-arq $(ofus "$Key")/${myIP} > /dev/null 2>&1 && echo -e "\n\033[1;32mConsultando Key 😃!\033[1;32m" || {
   echo -e "\033[1;32m Verified"
   invalid_key
   exit
   }
  sleep 1s
verif_key ${Key}
   #lst=$1 && lst1=$2 && lst2=$3 && key1=$4 && key2=crz
   #$_Ink/list $_lnk $_Ink $_1nk $key
